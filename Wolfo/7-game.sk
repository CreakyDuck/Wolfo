on script load:
	send join "&6&lWolfo &7&l» &8Took %difference between now and {wolfo::loading}%." to ops
	send "" to ops
	send "&6&lWolfo &7&l» &7Reloading game gestion ..." to ops
	set {wolfo::loading} to now

function wolfoGetConfig() :: integer:
	set {_p} to size of {wolfo::players::list::*}
	if {_p} is between 5 and 12:
		return 1
	else if {_p} is between 13 and 17:
		return 2
	else if {_p} is between 18 and 26:
		return 3
	else if {_p} is greater than or equal to 27:
		return 4
	else:
		return 1

function wolfoGetConfigRoles() :: objects:
	set {_p} to size of {wolfo::players::list::*}
	set {_config} to wolfoGetConfig()
	add "SEER", "DOCTOR" and "SHOOTER" to {_roles::*}    
	if {_config} is 1:
		{_p} is not 5
		add "CRAZY" to {_roles::*}
	if {_config} is 2 or 3:
		add "SEER_AURA", "CUPID", "WEREWOLF_ALPHA", "TOWNSFOLK_CURSED", "TOWNSFOLK_CURSED", "WITCH" and "HEADHUNTER" to {_roles::*}
	remove size of {_roles::*} from {_p}
	while {_p} is greater than 0:
		if mod({_p}, 2) is 0:
			add "WEREWOLF" to {_roles::*}
		else:
			add "TOWNSFOLK" to {_roles::*}
		remove 1 from {_p}
	return shuffled {_roles::*}

function wolfoGiveRoles():
	set {_input::*} to wolfoGetConfigRoles()
	wolfoGameRound(0)
	loop {wolfo::players::list::*}:
		set {wolfo::players::role_text::%loop-value%} to wolfoGet("ROLES.%{_input::%loop-index%}%.NAME")
		set {wolfo::players::role_name::%loop-value%} to {_input::%loop-index%}
		set {_desc::*} to wolfoGetO("ROLES.%{_input::%loop-index%}%.DESC")
		send title {_role} to loop-value for 2 seconds
		send join wolfoGet("PREFIX.GENERAL"), wolfoGet("MESSAGE.REVEAL") and wolfoGet("ROLES.%{_input::%loop-index%}%.NAME") to loop-value
		add loop-value to {wolfo::players::role::%{_input::%loop-index%}%::*}
		wait 4 ticks
	wolfoGameRound(1)

function wolfoGameRound(type: integer):
	if {_type} is 0:
		set {wolfo::game::day} to 0
		set {wolfo::game::start} to true
		set {wolfo::game::status} to "DAY"
	if {_type} is 1:
		{wolfo::game::start} is true
		if {wolfo::game::status} is "DAY":
			send "&6&lWolfo &7&l» &fLa nuit tombe ..." to {wolfo::players::list::*}
			while "%time of ""world""%" isn't "0:00":
				add 20 ticks to time of "world"
				wait a tick
			strike lightning at {wolfo::game::center}
			set {wolfo::game::status} to "NIGHT"
			wolfoGameManage(1)
		else:
			send "&6&lWolfo &7&l» &fLe jour se lève ..." to {wolfo::players::list::*}
			while "%time of ""world""%" isn't "12:00":
				add 20 ticks to time of "world"
				wait a tick
			set {wolfo::game::status} to "DAY"
			add 1 to {wolfo::game::day}
			wolfoGameManage(2)
	wolfoSb({wolfo::players::list::*})

function wolfoGameManage(i: number):
	{wolfo::game::start} is set
	if {_i} is 1:
		if {wolfo::vote::round} is not set:
			set {_config} to wolfoGetConfig()
			if {_config} is 1:
				set {wolfo::vote::round} to 1
			else:
				set {wolfo::vote::round} to 0
		else:
			add 1 to {wolfo::vote::round}
		if {wolfo::vote::round} is 0:
			add "CUPID" to {_roles::*}
			send "&6&lWolfo &7&l» &8... et Cupidon va rendre deux joueurs amoureux." to {wolfo::players::list::*}
		else if {wolfo::vote::round} is 1:
			add "WEREWOLF" to {_roles::*}
			send "&6&lWolfo &7&l» &8Les Loup-Garous vont choisir leur victime ..." to {wolfo::players::list::*}
		else if {wolfo::vote::round} is 2:
			set {_results::*} to wolfoMostVoted({wolfo::vote::players::*})
			set {wolfo::vote::results::WEREWOLF} to {_results::1}
			set {wolfo::vote::results::WEREWOLF::votes} to {_results::2}
			add "SEER" and "DOCTOR" to {_roles::*}
			send "&6&lWolfo &7&l» &8La Voyante va découvrir le rôle d'un joueur ..." to {wolfo::players::list::*}
			if {_config} is 1:
				add "SEER_AURA" to {_roles::*}
				send "&6&lWolfo &7&l» &8... tandis que la Voyante Aura va découvrir l'aura d'un autre ..." to {wolfo::players::list::*}
			send "&6&lWolfo &7&l» &8... pendant que le Docteur va décider de protéger un joueur." to {wolfo::players::list::*}
		else if {wolfo::vote::round} is 3:
			if {_config} is 2 or 3:
				add "WITCH" to {_roles::*}
				send "&6&lWolfo &7&l» &8La sorcière va décider de tuer un joueur ou sauver la victime choisie par les Loup-Garous ..." to {wolfo::players::list::*}
			else:
				clear {wolfo::vote::round}
				wolfoGameRound(1)
		if {wolfo::vote::round} is 4:
			broadcast "%{_results::*}%"
			broadcast "&6&lWolfo &7&l» &f Les amoureux sont %{wolfo::vote::cupid::%{_voter}%::*}%&f."
			broadcast "&6&lWolfo &7&l» &fLes loup-garous ont votés %{wolfo::vote::results::WEREWOLF}%&f."
			broadcast "&6&lWolfo &7&l» &fLa Voyante a vu la personne ayant un rôle %{wolfo::vote::results::SEER}%&f."
			broadcast "&6&lWolfo &7&l» &fLe Docteur a protégé %{wolfo::vote::results::DOCTOR}%&f."
			if {_config} is 1:
				broadcast "&6&lWolfo &7&l» &fLa Voyante Aura a vu un joueur ayant une aura %{wolfo::vote::results::SEER_AURA}%&f."
			clear {wolfo::vote::round}
			wolfoGameRound(1)
			stop
		loop {_roles::*}:
			clear {wolfo::vote::list::*}
			clear {wolfo::vote::voters::*}
			wolfoVote(loop-value, 1)
	else if {_i} is 2:
		if {wolfo::vote::round} is not set:
			set {wolfo::vote::round} to 0
			broadcast "Le jour se lève et personne n'est mort. blalblablalbla"
		else:
			add 1 to {wolfo::vote::round}
		if {wolfo::vote::round} is 0:
			broadcast "DISCUSSION bblablabllbalablbala"
			wolfoTime(90, {wolfo::players::list::*}, 3)
		else if {wolfo::vote::round} is 1:
			broadcast "C'EST L'HEURE DU VOTE blalbalablbalablbla"
			wolfoMenuVote({wolfo::players::list::*}, "TOWNSFOLK")
			wolfoTime(30, {wolfo::players::list::*}, 2)
		else if {wolfo::vote::round} is 2:
			broadcast "TERMINENEE blalblablabl"
			clear {wolfo::vote::round}
			wolfoGameRound(1)
	else if {_i} is 3:
		wolfoGameRound(1)

function wolfoVote(o: objects, mode: integer):
	loop {_o::*}:
		wolfoMenuVote({wolfo::players::role::%loop-value%::*}, loop-value)
		wolfoTime(30, {wolfo::players::role::%loop-value%::*}, {_mode})

function wolfoTime(t: integer, p: objects, mode: integer):
	broadcast "&c6 &8[TIMER] &7[%{_t}%] [%{_p::*}%] [%{_mode}%]"
	if {wolfo::timer} is set:
		set {wolfo::timer} to {_t}
		stop
	if {_mode} is 0:
		set {_second} to wolfoGet("TIME.SECOND")
		set {_title} to wolfoGet("MESSAGE.TITLE")
		set {_starting} to wolfoGet("MESSAGE.START.BEGIN")
		set {_start} to wolfoGet("MESSAGE.START.START")
	if {_mode} is 1 or 2:
		set {_second} to "seconde(s)"
		set {_title} to ""
		set {_starting} to "&eDépéchez vous de voter, il vous reste "
		set {_start} to "Vote terminé !"
	if {_mode} is 3:
		set {_second} to "seconde(s)"
		set {_title} to "Débat"
		set {_starting} to "&eDépéchez vous de débattre, il vous reste "
		set {_start} to "Débat terminé !"
	set {_time} to {_t}
	set {wolfo::timer} to {_t}
	loop {_p::*}:
		loop ({wolfo::timer} - 5) times:
			send action bar join {_starting}, "&a%{wolfo::timer}% " and {_second} to loop-value-1
			set loop-value-1's level to {wolfo::timer}
			if mod({wolfo::timer}, 10) = 0: 
				send title {_title} with subtitle join {_starting}, "&a%{wolfo::timer}% " and {_second} to loop-value-1 for 2 seconds
			remove 1 from {wolfo::timer}
			wait a second
		while {wolfo::timer} >= 1:
			send title {_title} with subtitle join {_starting}, "&a%{wolfo::timer}% " and {_second} to loop-value-1 for 2 seconds
			send action bar join {_starting}, "&a%{wolfo::timer}% " and {_second} to loop-value-1
			set loop-value-1's level to {wolfo::timer}
			remove 1 from {wolfo::timer}
			wait 1 second
		send title {_title} with subtitle {_start} to loop-value-1 for a second
		send action bar {_start} to loop-value-1
		set loop-value-1's level to 0
	clear {wolfo::timer}
	if {_mode} is 0:
		wolfoStart()
	if {_mode} is 1 or 2:
		wolfoGameManage({_mode})
		close {_p::*}'s inventory
	if {_mode} is 3:
		wolfoGameManage(2)

function wolfoKill(p: player):
	hide {_p} from all players
	set {wolfo::players::life::%{_p}%} to "&cMort"
	teleport {_p} to wolfoGetL("GAME.LOCATIONS.END")
	send title "&6&lWolfo &7&l»" with subtitle "&c Vous êtes mort !" to {_p} for 2 seconds

function wolfoMostVoted(c: objects) :: objects:
	broadcast "%{_c::*}% M.VOTED"
	set {_sorted::*} to sorted {_c::*}
	set {_top} to last element out of {_sorted::*}
	loop {_c::*}:
		loop-value is {_top}
		set {_p} to loop-index
	return {_p} and {_top}

function wolfoCheckWin():
	if size of {wolfo::players::list::*} = 0:
		set {_mode} to 1
	if size of {wolfo::players::list::*} = 1:
		set {_mode} to 2
	if size of {wolfo::players::role::WEREWOLF::*} = 0:
		set {_mode} to 3
	loop {wolfo::players::list::*}:
		if {wolfo::players::role_name::%loop-value%} is "TOWNSFOLK", "SEER_AURA", "CUPID", "TOWNSFOLK_CURSED", "WITCH", "DOCTOR" or "SHOOTER":
			add 1 to {_alive}
	if {_alive} isn't set:
		set {_mode} to 4
	if {_mode} is 1:
		wolfoEnd()
	if {_mode} is 2:
		loop {wolfo::players::list::*}:
			send title "&6&lWolfo &7&l»" with subtitle "&aVous avez gagné !" to loop-value for 2 seconds
			broadcast "&6&lWolfo &7&l» &a%loop-value% &fà win la game avec le rôle &b%{wolfo::players::role_name::%loop-value%}%"
		wait 5 seconds
		wolfoEnd()
	if {_mode} is 3:
		loop {wolfo::players::list::*}:
			if {wolfo::players::role_name::%loop-value%} is "WEREWOLF", "WEREWOLF_ALPHA", "CRAZY" or "HEADHUNTER":
				send title "&6&lWolfo &7&l»" with subtitle "&7Vous avez perdu !" to loop-value for 2 seconds
			else:
				send title "&6&lWolfo &7&l»" with subtitle "&aVous avez gagné !" to loop-value for 2 seconds
		broadcast "&6&lWolfo &7&l» &fLe &avillage &fà gagné la partie !"
		wait 5 seconds
		wolfoEnd()
	if {_mode} is 4:
		loop {wolfo::players::list::*}:
			if {wolfo::players::role_name::%loop-value%} is "TOWNSFOLK", "SEER_AURA", "CUPID", "TOWNSFOLK_CURSED", "WITCH", "DOCTOR", "SHOOTER", "CRAZY" or "HEADHUNTER":
				send title "&6&lWolfo &7&l»" with subtitle "&7Vous avez perdu !" to loop-value for 2 seconds
			else:
				send title "&6&lWolfo &7&l»" with subtitle "&aVous avez gagné !" to loop-value for 2 seconds
			broadcast "&6&lWolfo &7&l» &fLes &cLoup-garou &font gagné la partie !"
			wait 5 seconds
			wolfoEnd()
