# Ce script contient toutes les informations nécessaires pour faire fonctionner les autres scripts.
# Merci de ne pas modifier son nom afin de garder une hiérachie et charger les autres scripts convenablement.

on script load:
	clear {wolfo::loading::error}
	send "&3&lWolfo &f&l» &7Loading config ..." to ops
	set {wolfo::loading} to now
	clear {wolfo::config::*}
	reload all yml from directory "plugins/Skript/scripts/Wolfo/lang/" using filename as id
	reload all yml from directory "plugins/Skript/scripts/Wolfo/" using filename as id
	size of loaded yml is below 2:
		send "&c[Wolfo] Error! Please check that the configuration or / and the language files are placed in the correct folders." to console
		add 1 to {wolfo::loading::error}
	else:
		loop all loaded yml:
			send "&8> %loop-value%" to ops
			add loop-value to {wolfo::config::*}
	yml "config" is empty
	send "&c[Wolfo] Error! The file containing the config could not be found." to console
	add 1 to {wolfo::loading::error}

function wolfoGetText(request: text, type: integer, p: player = "") :: text:
	broadcast "&8YML: &7GetText File: &b%{_type}% &7Request: &b%{_request}%" if {wolfo::debug::status} is true
	set {_} to yml value {_request} from "config" if {_type} is 1, else yml value {_request} from "%{wolfo::players::lang::%{_p}%}%"
	return {_}

function wolfoGetMultipleText(request: text, type: integer, p: player = "") :: objects:
	broadcast "&8YML: &7GetMultipleText File: &b%{_type}% &7Request: &b%{_request}%" if {wolfo::debug::status} is true
	return yml list {_request} from "config" if {_type} is 1, else yml list {_request} from "%{wolfo::players::lang::%{_p}%}%"

function wolfoGetLoc(request: text) :: location:
	return yml value {_request} from "config"

function wolfoSetText(request: text, value: text):
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7LOCATION" if {wolfo::debug::status} is true
	set yaml value {_request} from "config" to {_value}
	save yaml "config"

function wolfoSetLoc(request: text, value: location):
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7LOCATION" if {wolfo::debug::status} is true
	set yaml value {_request} from "config" to {_value}
	save yaml "config"

function wolfoUpdateO(request: text, value: text, type: integer):
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7OBJECTS" if {wolfo::debug::status} is true
	set {_list::*} to yaml list {_request} from "config"
	if {_type} is 0:
		if {_list::*} doesn't contain {_value}:
			add {_value} to {_list::*}
		else:
			remove {_value} from {_list::*}
		delete yaml list {_request} from "config" if {_list::*} is not set
	set yaml list {_request} from "config" to {_list::*}
	save yaml "config"
