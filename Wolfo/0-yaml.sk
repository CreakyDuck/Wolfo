# Ce script contient toutes les informations nécessaires pour faire fonctionner les autres scripts.
# Merci de ne pas modifier son nom afin de garder une hiérachie et charger les autres scripts convenablement.

on script load:
	send "&6&lWolfo &7&l» &7Loading config ..." to ops
	set {wolfo::loading} to now
	load yaml "plugins/Skript/scripts/Wolfo/config.yml" as "config"
	if yaml "config" is empty:
		broadcast "&4Error! The file containing the config could not be found."
		broadcast "&7Please download it and add it to the Wolfo folder."
		add 1 to {wolfo::loading::error}
	set {_actual} to "1.0"
	set {_current} to wolfoGet("VERSION")
	if {_actual} is not {_current}:
		broadcast "&6Wow! It's been a while since you last updated Wolfo."
		broadcast "&7Version &eV%{_actual}%&7 is already out, you are in &eV%{_current}%&7!"
		add 1 to {wolfo::loading::error}

function wolfoGet(request: text) :: text: # POUR LES TEXTES (plus utilisé)
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7TEXT" if {wolfo::game::debug::yml} is true
	return yaml value {_request} from "config"

function wolfoGetO(request: text) :: objects: # POUR LES OBJECTS
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7OBJECTS" if {wolfo::game::debug::yml} is true
	return yaml list {_request} from "config"

function wolfoSet(request: text, value: text):
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7TEXT" if {wolfo::game::debug::yml} is true
	set yaml value {_request} from "config" to {_value}
	save yaml "config"

function wolfoSetO(request: text, value: objects):
	broadcast "&8[YAML &7CONFIG&8]: &8REQ:&7%{_request}% &f- &8TYPE:&7OBJECTS" if {wolfo::game::debug::yml} is true
	set yaml list {_request} from "config" to {_value::*}
	save yaml "config"